Fastest solution

class Solution {
    public int arrangeCoins(int n) {
        return (int)(Math.sqrt(2*(long)n + 0.25)-0.5);}}

2nd method

class Solution {
    public int arrangeCoins(int n) {
        int count=0;
        if(n==0)
        return 0;
       else{
        
           int i=1;
           while(n >=i){
               n=n-i;
            count++;
            i++;
           }
       }
       return count;
    }
}



3rd method

class Solution {
    public int arrangeCoins(int n) {
    long left=0, right=n;
    while(left<=right){
        long mid= left+(right-left)/2;
        long k= mid * (mid+1)/2;
        if(k==n){
            return (int)mid;
        }
        else if(k>n){
            right=mid-1;
        }
        else
        left=mid+1;
    }
    return (int) right;
    
    
    
    }}
